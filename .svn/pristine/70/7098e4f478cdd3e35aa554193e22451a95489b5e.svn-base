package com.daoshun.shiqu.controller.admin;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.daoshun.shiqu.service.manage.MaShopService;
import com.google.gson.Gson;

@Controller
public class ManageShopController extends ManageBaseController {

	@Resource(name = "maShopService")
	private MaShopService maShopService;

	@RequestMapping("/shoplist")
	public ModelAndView shoplist(Integer page, String keywords, Integer type) {
		ModelAndView mov = new ModelAndView();
		mov.addObject("result", maShopService.getShopList(page, keywords, type));
		mov.setViewName("/manage/shoplist");
		return mov;
	}

	@RequestMapping("/addshop")
	public ModelAndView addShop(String store_name) {
		ModelAndView mov = new ModelAndView();
		maShopService.addShop(store_name);
		mov.addObject("result", maShopService.getShopList(1, null, null));
		mov.setViewName("redirect:/manage/shoplist");
		return mov;
	}

	@RequestMapping("/editshop")
	public ModelAndView editShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("redirect:/manage/shoplist");
		return mov;
	}

	@RequestMapping("/delshop")
	public ModelAndView delShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("redirect:/manage/shoplist");
		return mov;
	}

	// 总店
	@RequestMapping("/headshop")
	public ModelAndView headShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/addheadshop")
	public ModelAndView addHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/editheadshop")
	public ModelAndView editHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/delheadshop")
	public ModelAndView delHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	// 代理商
	@RequestMapping("/agent")
	public ModelAndView agentList(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/addagent")
	public ModelAndView addAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/editagent")
	public ModelAndView editAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/delagent")
	public ModelAndView delAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/category")
	public ModelAndView category() {
		ModelAndView mov = new ModelAndView();
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("/manage/categorylist");
		return mov;
	}

	@RequestMapping("/editcategory")
	public ModelAndView editCategory(Long cid, String name) {
		ModelAndView mov = new ModelAndView();
		if (cid != null) {
			maShopService.editCategory(cid, name);
		} else {
			maShopService.addCategory(name);
		}
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("redirect:/manage/category");
		return mov;
	}

	@RequestMapping("/delcategory")
	public ModelAndView delCategory(Long cid) {
		ModelAndView mov = new ModelAndView();
		if (cid != null) {
			maShopService.delCategory(cid);
		}
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("redirect:/manage/categorylist");
		return mov;
	}

	@ResponseBody
	@RequestMapping(value = "/getstoreuser", produces = "application/json; charset=UTF-8")
	public String getStoreUser(Long sid) {
		return new Gson().toJson(maShopService.getStoreUser(sid));
	}

	@ResponseBody
	@RequestMapping(value = "/editstoreuser", produces = "text/html; charset=UTF-8")
	public String editStoreUser(Long sid, Long suserid, String phone, String password) {
		if (suserid == null) {
			return maShopService.addStoreUser(sid, phone, password);
		} else {
			return maShopService.editStoreUser(suserid, phone, password);
		}
	}
}
