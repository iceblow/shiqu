package com.daoshun.shiqu.controller.admin;

import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;
import javax.management.Query;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.daoshun.shiqu.common.CommonUtils;
import com.daoshun.shiqu.common.Constants;
import com.daoshun.shiqu.common.QueryResult;
import com.daoshun.shiqu.pojo.HeadStore;
import com.daoshun.shiqu.pojo.Store;
import com.daoshun.shiqu.pojo.StoreCategory;
import com.daoshun.shiqu.service.manage.MaShopService;
import com.google.gson.Gson;

@Controller
public class ManageShopController extends ManageBaseController {

	@Resource(name = "maShopService")
	private MaShopService maShopService;

	@RequestMapping("/shoplist")
	public ModelAndView shoplist(Integer pageIndex, String keywords, Long category_id) {
		ModelAndView mov = new ModelAndView();
		if(category_id == null){
			category_id = Long.valueOf(0);
		}
		if(pageIndex == null){
			pageIndex = 1;
		}
		QueryResult<Store> result = maShopService.getShopList(pageIndex, keywords, category_id);
		mov.addObject("result", result);
		long pageCount = (result.getTotal() + (Constants.ADMINLISTNUM - 1)) / Constants.ADMINLISTNUM;
		mov.addObject("pageCount", pageCount);
		mov.addObject("pageIndex", pageIndex);
		List<StoreCategory> categorylist= maShopService.getStoreCategoryList();
		mov.addObject("categorylist", categorylist);
		mov.addObject("keywords", keywords);
		mov.setViewName("/manage/shoplist");
		return mov;
	}

	@RequestMapping("/addshop")
	public ModelAndView addShop(String store_name) {
		ModelAndView mov = new ModelAndView();
		maShopService.addShop(store_name);
		mov.addObject("result", maShopService.getShopList(1, null, 0));
		mov.setViewName("redirect:/manage/shoplist");
		return mov;
	}

	@RequestMapping("/editshop")
	public ModelAndView editShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("redirect:/manage/shoplist");
		return mov;
	}

	@RequestMapping("/delshop")
	public void delShop(Long store_id, HttpServletResponse response) {
		HashMap<String,Object> result = new HashMap<String,Object>();
		String message = "";
		if(store_id != null){
			Store store = maShopService.getStoreById(store_id);
			if(store == null){
				result.put("code", 102);
				message = "商店不存在";
				result.put("message", message);
				CommonUtils.setMaptoJson(response, result);
				return;
			}else{
				store.setDel_flg(1);
				maShopService.updateStore(store);
				result.put("code", 1);
				message = "删除成功";
				result.put("message", message);
				CommonUtils.setMaptoJson(response, result);
				return;
			}
		}else{
			result.put("code", 102);
			message = "商店不存在";
			result.put("message", message);
			CommonUtils.setMaptoJson(response, result);
			return;
		}
	}

	// 总店
	@RequestMapping("/headshop")
	public ModelAndView headShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/addheadshop")
	public ModelAndView addHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/editheadshop")
	public ModelAndView editHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/delheadshop")
	public ModelAndView delHeadShop(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	// 代理商
	@RequestMapping("/agent")
	public ModelAndView agentList(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/addagent")
	public ModelAndView addAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/editagent")
	public ModelAndView editAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/delagent")
	public ModelAndView delAgent(long adminId, String name, String password, int privilege) {
		ModelAndView mov = new ModelAndView();
		mov.setViewName("/manage/shopmanage");
		return mov;
	}

	@RequestMapping("/category")
	public ModelAndView category() {
		ModelAndView mov = new ModelAndView();
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("/manage/categorylist");
		return mov;
	}

	@RequestMapping("/editcategory")
	public ModelAndView editCategory(Long cid, String name) {
		ModelAndView mov = new ModelAndView();
		if (cid != null) {
			maShopService.editCategory(cid, name);
		} else {
			maShopService.addCategory(name);
		}
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("redirect:/manage/category");
		return mov;
	}

	@RequestMapping("/delcategory")
	public ModelAndView delCategory(Long cid) {
		ModelAndView mov = new ModelAndView();
		if (cid != null) {
			maShopService.delCategory(cid);
		}
		mov.addObject("categorylist", maShopService.getCategory());
		mov.setViewName("redirect:/manage/categorylist");
		return mov;
	}

	@RequestMapping(value = "/getstoreuser", produces = "application/json; charset=UTF-8")
	public String getStoreUser(Long sid) {
		return new Gson().toJson(maShopService.getStoreUser(sid));
	}

	@RequestMapping(value = "/editstoreuser", produces = "text/html; charset=UTF-8")
	public String editStoreUser(Long sid, Long suserid, String phone, String password) {
		if (suserid == null) {
			return maShopService.addStoreUser(sid, phone, password);
		} else {
			return maShopService.editStoreUser(suserid, phone, password);
		}
	}
	
	@RequestMapping(value = "/headshoplist", produces = "text/html; charset=UTF-8")
	public ModelAndView headshoplist(Integer pageIndex){
		ModelAndView mov = new ModelAndView();
		if(pageIndex == null){
			pageIndex = 1;
		}
		QueryResult<HeadStore> result = maShopService.getHeadStorelistByPage(pageIndex, Constants.ADMINLISTNUM);
		if(result.getDataList() == null || result.getDataList().size() > 0){
			if(pageIndex > 1){
				pageIndex--;
				mov.setViewName("redirect:/manage/headshoplist?pageIndex="+pageIndex);
			}
		}
		List<HeadStore> headlist = result.getDataList();
		long pageCount = (result.getTotal()+Constants.ADMINLISTNUM-1)/Constants.ADMINLISTNUM;
		mov.addObject("headlist", headlist);
		mov.addObject("pageIndex", pageIndex);
		mov.addObject("pageCount", pageCount);
		mov.setViewName("manage/headshoplist");
		return mov;
	}
}
