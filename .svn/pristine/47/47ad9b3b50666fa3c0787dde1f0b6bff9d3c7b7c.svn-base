package com.daoshun.shiqu.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.daoshun.shiqu.common.CommonUtils;
import com.daoshun.shiqu.common.QueryResult;
import com.daoshun.shiqu.pojo.PrintInfo;
import com.daoshun.shiqu.pojo.StoreArea;
import com.daoshun.shiqu.pojo.StoreTable;

@Service("storeTableService")
@Transactional(readOnly = true, propagation = Propagation.SUPPORTS)
public class StoreTableService extends BaseService{

	@SuppressWarnings("unchecked")
	public QueryResult<StoreArea> getStoreAreaList(long store_id,int pageIndex,int pageSize){
			StringBuffer areahql = new StringBuffer();
			areahql.append(" from StoreArea where store_id = :store_id ");
			List<StoreArea> arealist = (List<StoreArea>) dataDao.pageQueryViaParam(areahql.toString(), pageSize, pageIndex, new String[]{"store_id"}, store_id);
			for(StoreArea area:arealist){
				long print_id1 =area.getPrint_id1();
				if(print_id1>0){
					PrintInfo print1 = dataDao.getObjectById(PrintInfo.class, print_id1);
					if(print1!=null){
						area.setPrint_name1(print1.getPrint_name());
					}
				}
				long print_id2 =area.getPrint_id2();
				if(print_id2>0){
					PrintInfo print2 = dataDao.getObjectById(PrintInfo.class, print_id2);
					if(print2!=null){
						area.setPrint_name2(print2.getPrint_name());
					}
				}
				long print_id3 =area.getPrint_id3();
				if(print_id3>0){
					PrintInfo print3 = dataDao.getObjectById(PrintInfo.class, print_id3);
					if(print3!=null){
						area.setPrint_name3(print3.getPrint_name());
					}
				}
			}
			long count = (long) dataDao.getFirstObjectViaParam("select count(*) "+ areahql.toString(), new String[]{"store_id"}, store_id);
			QueryResult<StoreArea> result = new QueryResult<StoreArea>(arealist,count);
			return result;
	}
	 
	public StoreArea getStoreAreaById(long id){
		return dataDao.getObjectById(StoreArea.class, id);
	}
	
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public void saveStoreArea(StoreArea storearea){
		dataDao.saveOrUpdateObject(storearea);
	}
	
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public void delStoreArea(Long[] ids,long store_id){
		String hql  = " from StoreArea where id = :id and store_id = :store_id";
		String[] params = {"id","store_id"};
		for(Long id:ids){
			if(id!=null&&id>0){
				StoreArea storearea = (StoreArea) dataDao.getFirstObjectViaParam(hql, params, id,store_id);
				if(storearea!=null){
					dataDao.deleteObject(storearea);
				}
			}
		}
	}
	
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public void delStoreTable(Long[] ids,long store_id){
		String hql  = " from StoreTable where id = :id and store_id = :store_id";
		String[] params = {"id","store_id"};
		for(Long id:ids){
			if(id!=null&&id>0){
				StoreTable storetable = (StoreTable) dataDao.getFirstObjectViaParam(hql, params, id,store_id);
				if(storetable!=null){
					dataDao.deleteObject(storetable);
				}
			}
		}
	}
	
	@SuppressWarnings("unchecked")
	public QueryResult<StoreTable> getTableListByStoreid(Integer area_id,String keyword,long store_id,int pageIndex,int pageSize){
		StringBuffer tablehql = new StringBuffer();
		tablehql.append(" from StoreTable where store_id = "+store_id);
		if(area_id!=null&&area_id>0){
			tablehql.append(" and area_id = "+area_id);
		}
		if(!CommonUtils.isEmptyString(keyword)){
			tablehql.append(" and table_no = '%"+keyword+"%' ");
		}
		List<StoreTable> tablelist = (List<StoreTable>) dataDao.pageQueryViaParam(tablehql.toString(), pageSize, pageIndex, null);
		for(StoreTable table:tablelist){
			if(table.getArea_id()>0){
				StoreArea area = dataDao.getObjectById(StoreArea.class, table.getArea_id());
				table.setArea_name(area.getArea_name());
			}
		}
		long count = (long) dataDao.getFirstObjectViaParam("select count(*) " + tablehql.toString(), null);
		QueryResult<StoreTable>  result = new QueryResult<StoreTable>(tablelist, count);
		return result;
	}
	
	public StoreTable getStoreTableById(long id){
		return dataDao.getObjectById(StoreTable.class,id);
	}

	@SuppressWarnings("unchecked")
	public List<StoreArea> getAreaListByStoreId(long store_id){
		return (List<StoreArea>)dataDao.getObjectsViaParam(" from StoreArea where store_id = "+store_id, null);
	}
	
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public void updateStoreTable(StoreTable table){
		dataDao.updateObject(table);
	}
	
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public void addStoreTable(StoreTable table){
		dataDao.addObject(table);
	}
}
